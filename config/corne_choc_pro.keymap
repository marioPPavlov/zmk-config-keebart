/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    macros {
        windowtab: windowtab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp RALT>;

            label = "WINDOWTAB";
        };

        spotlight: spotlight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SPOTLIGHT";
        };

        ue: ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp Y>,
                <&macro_release>,
                <&kp RALT>;

            label = "UE";
        };

        oe: oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp P>,
                <&macro_release>,
                <&kp RALT>;

            label = "OE";
        };

        ae: ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_release>,
                <&kp RALT>;

            label = "AE";
        };

        tripple_dash: tripple_dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>, <&macro_press>;

            label = "TRIPPLE_DASH";
        };

        window_tab_mav: window_tab_mav {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "WINDOW_TAB_MAV";
        };

        smart_tab: smart_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 7 &kp LEFT_ALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT &mo 7>;

            label = "SMART_TAB";
        };

        smart_tab_mac: smart_tab_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 7 &kp LGUI>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LGUI &mo 7>;

            label = "SMART_TAB_MAC";
        };

        smart_ctrl_tab: smart_ctrl_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 7 &kp LEFT_CONTROL>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL &mo 7>;

            label = "SMART_CTRL_TAB";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <18 17>;
            layers = <0 1 2 3 4 5>;
        };

        combo_lgui {
            bindings = <&kp LGUI>;
            key-positions = <16 17>;
            layers = <0 2 1 3 4 5>;
        };

        combo_lalt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <18 16>;
            layers = <1 0 3 2 4 5>;
        };

        combo_rctrl {
            bindings = <&kp RCTRL>;
            key-positions = <23 24>;
            layers = <0 1 2 3 4 5>;
        };

        combo_rgui {
            bindings = <&kp LGUI>;
            key-positions = <24 25>;
            layers = <0 1 2 3 4 5>;
        };

        combo_ralt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <23 25>;
            layers = <1 0 2 3 4 5>;
        };

        combo_function_ls {
            bindings = <&sl 4>;
            key-positions = <4 18>;
            layers = <0 1 2 3 4 5>;
        };

        combo_mouse_layer {
            bindings = <&to 6>;
            key-positions = <41 44>;
        };
    };

    behaviors {
        tab_mod_behavior: tab_mod_behavior {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_MOD_BEHAVIOR";
            bindings = <&lt 1 TAB>, <&kp TAB>;

            #binding-cells = <0>;
            keep-mods = <(MOD_RALT|MOD_RCTL)>;
            mods = <(MOD_RALT|MOD_RCTL)>;
        };

        my_layer_tap: my_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_LAYER_TAP";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&caps_word                        &kp Q  &kp W  &kp E              &kp R             &kp T              &rgb_ug RGB_TOG  &kp C_VOLUME_UP    &kp Y        &kp U              &kp I          &kp O    &kp P     &kp DELETE
&mt LS(LA(LC(LG(LCTRL)))) ESCAPE  &kp A  &kp S  &kp D              &kp F             &kp G              &rgb_ug RGB_EFF  &kp C_VOLUME_DOWN  &kp H        &kp J              &kp K          &kp L    &kp SEMI  &kp SQT
&mo 6                             &kp Z  &kp X  &kp C              &kp V             &kp B                                                  &kp N        &kp M              &kp COMMA      &kp DOT  &kp FSLH  &key_repeat
                                                &my_layer_tap 2 6  &mt LSHIFT SPACE  &tab_mod_behavior                                      &lt 3 GRAVE  &mt LSHIFT RETURN  &kp BACKSPACE
            >;
        };

        NUM {
            display-name = "Numbers";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  | LCTRL | RCTRL |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |  LALT | RALT  |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |               |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |               | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans        &trans    &trans     &trans  &rgb_ug RGB_ON   &none  &kp UNDERSCORE  &kp N7  &kp N8  &kp N9  &kp STAR  &trans
&trans  &trans  &sk LEFT_ALT  &sk LCMD  &sk LCTRL  &sl 4   &rgb_ug RGB_OFF  &none  &kp MINUS       &kp N4  &kp N5  &kp N6  &kp PLUS  &trans
&trans  &trans  &trans        &trans    &trans     &trans                          &kp PLUS        &kp N1  &kp N2  &kp N3  &kp DOT   &trans
                              &trans    &trans     &trans                          &kp EQUAL       &trans  &kp N0
            >;
        };

        NAV {
            display-name = "Navigation";
            bindings = <
&kp ESC    &none  &none         &none           &smart_ctrl_tab  &none   &bootloader     &bt BT_SEL 0  &none           &kp LEFT_ALT    &windowtab    &trans           &none   &trans
&kp LSHFT  &ae    &kp LEFT_ALT  &smart_tab_mac  &smart_tab       &none   &studio_unlock  &bt BT_SEL 1  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&kp LCTRL  &none  &none         &none           &none            &none                                 &none           &kp LCMD        &kp TAB       &trans           &none   &trans
                                &trans          &trans           &trans                                &key_repeat     &trans          &kp DELETE
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCL  &kp AT_SIGN    &kp LS(LEFT_PARENTHESIS)  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans  &trans      &trans     &trans    &trans         &trans      &trans
&trans  &trans    &kp BACKSLASH  &kp LEFT_BRACE            &kp RIGHT_BRACE        &trans  &trans  &trans  &kp RSHIFT  &kp RCTRL  &kp LGUI  &kp RIGHT_ALT  &kp LSHIFT  &trans
&trans  &trans    &trans         &kp LEFT_BRACKET          &kp RIGHT_BRACKET      &trans                  &trans      &trans     &trans    &trans         &trans      &trans
                                 &trans                    &trans                 &trans                  &trans      &trans     &trans
            >;
        };

        Function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        SYS {
            display-name = "System";
            bindings = <
&trans  &trans        &trans        &trans        &trans          &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans        &trans        &trans        &sys_reset      &studio_unlock  &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR      &bt BT_CLR_ALL                  &trans  &trans  &trans  &trans  &bootloader  &trans
                                    &trans        &studio_unlock  &sys_reset                      &trans  &trans  &trans
            >;
        };

        mouse1 {
            bindings = <
&trans  &trans  &msc SCRL_LEFT     &mmv MOVE_Y(-600)  &msc SCRL_RIGHT   &trans    &trans  &trans  &trans    &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans  &trans
&tog 6  &trans  &mmv MOVE_X(-600)  &mmv MOVE_Y(600)   &mmv MOVE_X(600)  &trans    &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans             &trans             &trans            &trans                    &trans    &trans          &trans          &trans           &trans  &trans
                                   &tog 6             &kp LCTRL         &kp LGUI                  &mkp MB3  &mkp MB1        &mkp MB2
            >;
        };

        tab {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans       &trans   &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LS(GRAVE)  &kp LS(TAB)  &kp TAB  &kp GRAVE  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans         &trans       &trans   &trans     &trans  &trans
                        &trans  &trans  &trans                  &trans         &trans       &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
