/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10
#define NUM 2
#define NAV 3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&sk { release-after-ms = <2500>; };

&mmv {
    time-to-max-speed-ms = <2>;
    acceleration-exponent = <3>;
};

&msc {
    delay-ms = <0>;
    acceleration-exponent = <3>;
    time-to-max-speed-ms = <1>;
};

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    macros {
        mouse_mode_color_on: mouse_mode_color {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&macro_color_on>,
                <&macro_wait_time 20>,
                <&macro_tap>,
                <&tog 5>,
                <&macro_tap>,
                <&mmv MOVE_Y(-50000)>;

            label = "MOUSE_MODE_COLOR";
        };

        macro_mo2AndLshft: smart_tab_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2 &kp LSHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2 &kp LEFT_SHIFT>;

            label = "SMART_TAB_SHIFT";
        };

        mouse_mode_color_off: mouse_mode_color_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&macro_color_off>, <&macro_tap>, <&tog 5>;

            label = "MOUSE_MODE_COLOR";
        };

        mac_lgui_tab: mac_lgui_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "MAC_LGUI_TAB";
        };

        mac_lgui_tab_double: mac_lgui_tab_double {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "MAC_LGUI_TAB_DOUBLE";
        };

        mac_lgui_tab_tripple: mac_lgui_tab_tripple {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "MAC_LGUI_TAB_TRIPPLE";
        };

        linux_lgui_tab: linux_lgui_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LALT>;

            label = "LINUX_LGUI_TAB";
        };

        linux_lgui_tab_double: linux_lgui_tab_double {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LALT>;

            label = "LINUX_LGUI_TAB_DOUBLE";
        };

        linux_lgui_tab_tripple: linux_lgui_tab_tripple {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LALT>;

            label = "LINUX_LGUI_TAB_TRIPPLE";
        };

        mac_change_language: mac_change_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPC)>;
            label = "MAC_CHANGE_LANGUAGE";
        };

        macro_open_clipboard: macro_open_clipboard {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LGUI>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL &kp LGUI>;

            label = "MACRO_OPEN_CLIPBOARD";
        };

        mouse_click_and_off: mouse_click_and_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&macro_color_off>,
                <&macro_tap>,
                <&mkp MB1 &tog 5>;

            label = "MOUSE_CLICK_AND_OFF";
        };

        hyper_delayed: hyper_delayed {
            compatible = "zmk,behavior-macro";
            label = "HYPER_DELAYED";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_wait_time 20>,
                <&kp LSHIFT>,
                <&macro_wait_time 20>,
                <&kp LEFT_ALT>,
                <&macro_wait_time 20>,
                <&kp LGUI>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL &kp LSHIFT &kp LALT &kp LGUI>;
        };

        macro_beginning_backspace: macro_beginning_backspace {
            compatible = "zmk,behavior-macro";
            label = "MACRO_BEGINNING_BACKSPACE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHIFT>,
                <&macro_tap>,
                <&kp LEFT_ARROW &kp BACKSPACE>,
                <&macro_release>,
                <&kp LGUI &kp LSHIFT>;
        };

        macro_end_delete: macro_end_delete {
            compatible = "zmk,behavior-macro";
            label = "MACRO_END_DELETE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LGUI)>,
                <&macro_tap>,
                <&kp RIGHT_ARROW &kp DELETE>,
                <&macro_release>,
                <&kp LS(LGUI)>;
        };

        macro_color_off: macro_color_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>;
            label = "MACRO_COLOR_OFF";
        };

        macro_mouse_up: macro_mouse_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mmv MOVE_Y(-300) &sl 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mmv MOVE_Y(-300) &sl 0>;

            label = "MACRO_MOUSE_UP";
        };

        macro_color_on: macro_color_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&rgb_ug RGB_ON>;

            label = "MACRO_COLOR_ON";
        };

        flush_stuck: flush_stuck {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LEFT_ALT>,
                <&macro_release>,
                <&kp LEFT_GUI>,
                <&macro_release>,
                <&kp RCTRL>,
                <&macro_release>,
                <&kp RIGHT_SHIFT>,
                <&macro_release>,
                <&kp RIGHT_ALT>,
                <&macro_release>,
                <&kp RIGHT_GUI>;

            label = "FLUSH_STUCK";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_toggle_base_mac {
            bindings = <&tog 1>;
            key-positions = <7 21>;
            layers = <0 3 4 5 1 4 6>;
        };

        grave_combo {
            bindings = <&mt LGUI GRAVE>;
            key-positions = <0>;
            layers = <0 3>;
        };

        color {
            bindings = <&rgb_ug RGB_COLOR_HSB(0,94,48)>;
            key-positions = <38 26>;
        };

        color_on {
            bindings = <&rgb_ug RGB_ON>;
            key-positions = <26 12>;
        };

        color_off {
            bindings = <&rgb_ug RGB_OFF>;
            key-positions = <13 27>;
        };

        combo_bootloader {
            bindings = <&bootloader>;
            key-positions = <6 20>;
            layers = <1 4>;
        };

        mac_screenshot_clipboard {
            bindings = <&kp LS(LC(LG(NUMBER_4)))>;
            key-positions = <28 14>;
        };

        combo_left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <18 17>;
        };

        combo_right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <23 24>;
        };

        combo_paren_left {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 18>;
        };

        combo_parent_right {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <22 23>;
        };

        combo_tog_mouse {
            bindings = <&mouse_mode_color_on>;
            key-positions = <10 23>;
            layers = <0 3 1 4 2 9>;
        };

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <32 31>;
        };

        combo_grave_mac {
            bindings = <&mt LEFT_ALT GRAVE>;
            key-positions = <0>;
            layers = <1 4>;
        };

        mac_screenshot_image {
            bindings = <&kp LS(LG(NUMBER_4))>;
            key-positions = <14 0>;
        };

        color_2 {
            bindings = <&rgb_ug RGB_COLOR_HSB(149,82,50)>;
            key-positions = <39 27>;
        };

        combo_underscore {
            bindings = <&kp UNDER>;
            key-positions = <35 36>;
        };

        combo_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <5 19>;
        };

        rugh {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <8 22>;
        };

        combo_equal {
            bindings = <&kp EQUAL>;
            key-positions = <11 25>;
        };

        combo_plus {
            bindings = <&kp PLUS>;
            key-positions = <10 24>;
        };

        combo_at_sign {
            bindings = <&kp AT>;
            key-positions = <3 17>;
        };

        combo_excl {
            bindings = <&kp EXCL>;
            key-positions = <2 16>;
        };

        tab_combo {
            bindings = <&kp TAB>;
            key-positions = <23 9>;
        };

        combo_tab_shift {
            bindings = <&kp LS(TAB)>;
            key-positions = <4 18>;
        };

        combo_sl_macro_layer {
            bindings = <&sl 7>;
            key-positions = <18 32>;
        };

        combo_change_language {
            bindings = <&mac_change_language>;
            key-positions = <23 35>;
        };

        combo_inverted_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <24 36>;
        };

        combo_colon {
            bindings = <&kp DOLLAR>;
            key-positions = <25 37>;
        };
    };

    behaviors {
        ht_sk_kp: ht_sk_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_SK_KP";
            bindings = <&sk>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <200>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };

        long_mo_tp: long_mo_tp {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_MO_TP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <300>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        long_th_kp: long_th_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_TH_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <300>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        mm_shift_capsword: mm_shift_capsword {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SHIFT_CAPSWORD";
            bindings = <&sk LSHIFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_spacecmd_cmdctrl: mm_spacecmd_cmdctrl {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SPACECMD_CMDCTRL";
            bindings = <&ht_sk_kp LGUI SPACE>, <&sk LC(LGUI)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ht_hyper_kp: ht_hyper_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_HYPER_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <1 2 3 4 5 6 7 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39>;
        };

        nav_word: nav_word {
            #binding-cells = <0>;
            compatible = "zmk,behavior-num-word";
            layers = <NAV>;
            continue-list = <LEFT DOWN UP RIGHT LSHIFT LGUI LALT ENTER J K Z>;
            ignore-numbers;
        };

        ht_sk_navword: ht_sk_navword {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_SK_NAVWORD";
            bindings = <&sl>, <&nav_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 7 8 9 10 11 12 13>;
        };

        num_word: num_word {
            compatible = "zmk,behavior-num-word";
            #binding-cells = <0>;
            layers = <NUM>;
            continue-list = <N1 N2 N3 N4 N5 N6 N7 N8 N9 LSHIFT LGUI LALT COLON MINUS PLUS KP_EQUAL DOT>;
            ignore-numbers;
        };

        th_num_word: th_num_word {
            compatible = "zmk,behavior-hold-tap";
            label = "TH_NUM_WORD";
            bindings = <&mo>, <&num_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <9 10 11 23 24 25 35 36 37 27>;
        };

        mm_backspace_mac: mm_backspace_mac {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_BACKSPACE_MAC";
            bindings = <&kp BACKSPACE>, <&macro_beginning_backspace>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        tab_swap: tab_swap {
            compatible = "zmk,behavior-tri-state";
            label = "TAB_SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;

            ignored-key-positions = <43>;
        };

        grave_swap: grave_swap {
            compatible = "zmk,behavior-tri-state";
            label = "GRAVE_SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp GRAVE>, <&kt LGUI>;

            ignored-key-positions = <43>;
        };

        grave_swap_shift: grave_swap_shift {
            compatible = "zmk,behavior-tri-state";
            label = "GRAVE_SWAP_SHIFT";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp LS(GRAVE)>, <&kt LGUI>;

            ignored-key-positions = <43>;
        };

        linux_grave_swap: linux_grave_swap {
            compatible = "zmk,behavior-tri-state";
            label = "LINUX_GRAVE_SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp GRAVE>, <&kt LALT>;

            ignored-key-positions = <43>;
        };

        linux_grave_swap_shift: linux_grave_swap_shift {
            compatible = "zmk,behavior-tri-state";
            label = "LINUX_GRAVE_SWAP_SHIFT";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp LS(GRAVE)>, <&kt LALT>;

            ignored-key-positions = <43>;
        };

        mm_numword: mm_numword {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_NUMWORD";
            bindings = <&th_num_word 2 0>, <&kp LS(TAB)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        linux_tab_swap: linux_tab_swap {
            compatible = "zmk,behavior-tri-state";
            label = "LINUX_TAB_SWAP";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;

            ignored-key-positions = <43>;
        };

        mm_space_htctrl: mm_space_htctrl {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SPACE_HTCTRL";
            bindings = <&ht_sk_kp LCTRL SPACE>, <&kp LS(LCTRL)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        mm_space_htlgui: mm_space_htlgui {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SPACE_HTLGUI";
            bindings = <&ht_sk_kp LGUI SPACE>, <&kp LS(LGUI)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        ht_kp_mb1_and_off: ht_kp_mb1_and_off {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_MB1_AND_OFF";
            bindings = <&kp>, <&mouse_click_and_off>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mm_mouse_click: mm_mouse_click {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_MOUSE_CLICK";
            bindings = <&mkp MB1>, <&kp LG(ENTER)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        ht_kp_kp: ht_kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";
            bindings = <
&mt LEFT_GUI GRAVE                     &kp Q            &kp W               &kp E               &kp R             &kp T               &flush_stuck     &kp C_VOLUME_UP    &kp Y             &kp U           &kp I          &kp O    &kp P     &kp DELETE
&ht_hyper_kp LS(LA(LG(LCTRL))) ESCAPE  &long_mo_tp 7 A  &long_th_kp LALT S  &kp D               &kp F             &long_mo_tp 9 G     &rgb_ug RGB_EFF  &kp C_VOLUME_DOWN  &kp H             &kp J           &kp K          &kp L    &kp SEMI  &kp SQT
&caps_word                             &kp Z            &kp X               &kp C               &kp V             &kp B                                                   &kp N             &kp M           &kp COMMA      &kp DOT  &kp FSLH  &key_repeat
                                                                            &ht_sk_navword 3 0  &mm_space_htctrl  &mm_shift_capsword                                      &th_num_word 2 0  &mt LALT ENTER  &kp BACKSPACE
            >;
        };

        mac_base {
            bindings = <
&trans                &trans  &trans               &trans  &trans            &trans  &trans  &trans  &trans  &trans           &trans  &trans  &trans  &trans
&trans                &trans  &long_th_kp LCTRL S  &trans  &trans            &trans  &trans  &trans  &trans  &trans           &trans  &trans  &trans  &trans
&mac_change_language  &trans  &trans               &trans  &trans            &trans                  &trans  &trans           &trans  &trans  &trans  &trans
                                                   &trans  &mm_space_htlgui  &trans                  &trans  &mt LCTRL ENTER  &trans
            >;
        };

        NUM {
            display-name = "Numbers";
            bindings = <
&trans   &trans               &trans             &trans           &trans                    &trans  &rgb_ug RGB_ON   &none  &trans                &trans              &trans                  &trans             &trans  &trans
&kp F20  &ht_kp_kp DOLLAR N4  &ht_kp_kp HASH N3  &ht_kp_kp AT N2  &ht_kp_kp EXCLAMATION N1  &kp N0  &rgb_ug RGB_OFF  &none  &ht_kp_kp PERCENT N5  &ht_kp_kp CARET N6  &ht_kp_kp AMPERSAND N7  &ht_kp_kp STAR N8  &kp N9  &kp BACKSLASH
&trans   &trans               &trans             &trans           &trans                    &trans                          &trans                &trans              &trans                  &trans             &trans  &trans
                                                 &trans           &trans                    &trans                          &trans                &trans              &trans
            >;
        };

        NAV {
            display-name = "Navigation";
            bindings = <
&trans   &trans  &trans     &trans     &trans     &trans  &bootloader     &bt BT_SEL 0  &trans          &kp LC(J)       &kp LC(K)      &trans           &trans                 &trans
&kp F20  &trans  &trans     &trans     &trans     &trans  &studio_unlock  &bt BT_SEL 1  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &macro_open_clipboard  &trans
&trans   &trans  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans                                &trans          &kp LC(Z)       &kp LC(LS(Z))  &trans           &trans                 &trans
                            &none      &trans     &trans                                &trans          &trans          &trans
            >;
        };

        NAV_MAC {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans  &trans  &trans  &kp LA(LEFT)  &trans     &trans         &kp LA(RIGHT)  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans  &trans  &trans  &trans        &trans     &trans         &trans         &trans  &trans
&trans  &trans  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans                  &trans        &kp LG(Z)  &kp LS(LG(Z))  &trans         &trans  &trans
                           &trans     &trans     &trans                  &trans        &trans     &trans
            >;
        };

        mouse {
            bindings = <
&trans                 &trans  &msc SCRL_LEFT      &mmv MOVE_Y(-1000)  &msc SCRL_RIGHT               &trans                 &trans  &trans  &trans    &msc SCRL_UP       &mmv MOVE_Y(-333)      &msc SCRL_DOWN    &trans  &trans
&mouse_mode_color_off  &trans  &mmv MOVE_X(-1000)  &mmv MOVE_Y(1000)   &mmv MOVE_X(1000)             &trans                 &trans  &trans  &mkp MB2  &mmv MOVE_X(-333)  &mmv MOVE_Y(333)       &mmv MOVE_X(333)  &trans  &trans
&trans                 &trans  &trans              &trans              &trans                        &trans                                 &trans    &mkp MB4           &mkp MB5               &mkp MB3          &trans  &trans
                                                   &ht_sk_navword 3 0  &ht_kp_mb1_and_off LCTRL MB1  &mouse_mode_color_off                  &trans    &mm_mouse_click    &mouse_mode_color_off
            >;
        };

        mouse_mac {
            bindings = <
&trans  &trans  &trans             &mmv MOVE_Y(-900)  &trans                       &trans  &trans  &trans  &trans  &trans             &mmv MOVE_Y(-300)  &trans            &trans  &trans
&trans  &trans  &mmv MOVE_X(-900)  &mmv MOVE_Y(900)   &mmv MOVE_X(900)             &trans  &trans  &trans  &trans  &mmv MOVE_X(-300)  &mmv MOVE_Y(300)   &mmv MOVE_X(300)  &trans  &trans
&trans  &trans  &trans             &trans             &trans                       &trans                  &trans  &trans             &trans             &trans            &trans  &trans
                                   &trans             &ht_kp_mb1_and_off LGUI MB1  &trans                  &trans  &mm_mouse_click    &trans
            >;
        };

        macro_layer_linux {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans           &linux_grave_swap_shift  &linux_grave_swap       &kp K_PP                 &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &linux_tab_swap  &linux_lgui_tab          &linux_lgui_tab_double  &linux_lgui_tab_tripple  &flush_stuck  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans           &mkp MB4                 &mkp MB5                &trans                   &trans        &trans
                        &trans  &trans  &trans                  &trans           &trans                   &trans
            >;
        };

        macro_layer_mac {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &grave_swap_shift  &grave_swap           &kp K_PLAY_PAUSE       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &tab_swap  &mac_lgui_tab      &mac_lgui_tab_double  &mac_lgui_tab_tripple  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans     &mkp MB4           &mkp MB5              &trans                 &trans  &trans
                        &trans  &trans  &trans                  &trans     &trans             &trans
            >;
        };

        Function {
            bindings = <
&trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &kp F10  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &trans  &trans              &trans  &trans                  &kp F12  &kp F1  &kp F2  &kp F3  &trans  &trans
                        &ht_sk_navword 3 0  &trans  &trans                  &trans   &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        nav_mac_activate_nav {
            if-layers = <1 3>;
            then-layer = <4>;
        };

        mouse_mac_activate_mouse {
            if-layers = <1 5>;
            then-layer = <6>;
        };

        macro_layer_mac_active_mac_macro_layer {
            if-layers = <1 7>;
            then-layer = <8>;
        };
    };
};
